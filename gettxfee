#!/usr/bin/env bash

# calculate fee for a transaction
# loop over arguments

function sum {
    echo "$@" | sed -e's/ /+/' | bc
}

function get_tx_output_values {
    RAWTX=$(bitcoin-cli getrawtransaction $1 1)
    echo $RAWTX | jq '.vout | .[] | .value'
}

function get_tx_input_values {
    # gives sum of inputs
    RAWTX=$(bitcoin-cli getrawtransaction $1 1)
    INPUTS=$(echo $RAWTX | jq -r '.vin | .[] | .txid')
    INPUT_VAL=0.0
    for TX in $INPUTS
    do
        VIN=($(get_tx_output_values $TX))
        # sum over first outputs of input transactions
        INPUT_VAL="$INPUT_VAL ${VIN[0]}"
    done
    echo $INPUT_VAL
}

function get_fee {
    # calculate fee as difference between inputs and outputs
    INPUT_VAL=$(sum $(get_tx_input_values $1))
    OUTPUT_VAL=$(sum $(get_tx_output_values $1))
    echo "$INPUT_VAL-$OUTPUT_VAL" | bc
}
    
function coinbase {
    # return coinbase or 0 otherwise
    RAWTX=$(bitcoin-cli getrawtransaction $1 1)
    echo $RAWTX | jq -r '.vin | .[] | .coinbase // false'
}

for TXID in "$@"
do
    if [ $(coinbase $TXID) = 'false' ]
    then
        echo '{'
        echo '"txid": "'$TXID'",'
        echo '"coinbase": 0,'
        echo '"fee":' $(get_fee $TXID)','
        echo '"value":' $(sum $(get_tx_output_values $TXID))
        echo '}'
    else
        echo '{'
        echo '"txid": "'$TXID'",'
        echo '"coinbase": 1,'
        echo '"value":' $(sum $(get_tx_output_values $TXID))
        echo '}'
    fi
done

