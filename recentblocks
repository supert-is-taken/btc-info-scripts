#!/usr/bin/env bash

# (c) /u/supert 2016
# released under MIT licence

# show info about recent blocks

DATEFMT="+%H:%M:%S%%%Y-%m-%d" 

test -z $(which bitcoin-cli) && echo "$(basename $0) requires bitcoin-cli to be installed."
test -z $(which jq) && echo "$(basename $0) requires jq to be installed."

# test for options
HTML=
NUMBLOCKS=10
while getopts hwn: opt
do
    case "$opt" in
    (h) echo "usage: $0 [-w] [-n NUMBLOCKS]";;
    (w) HTML=1;;
    # n argument is number of blocks to show, default 10
    (n) NUMBLOCKS=$OPTARG;;
    esac
done

shift $((OPTIND - 1))

TABLE=/tmp/recentblocks-table-$RANDOM.tmp
OUTFILE=/tmp/recentblocks-out-$RANDOM.tmp

LASTHASH=$(bitcoin-cli getbestblockhash)

# starting from last block, work back
for i in $(seq $NUMBLOCKS)
do
    HEIGHT=$(bitcoin-cli getblock $LASTHASH | jq '.height')
    VERSION=x$(printf "%08x" $(bitcoin-cli getblock $LASTHASH | jq '.version'))
    SIZE="$(( $(bitcoin-cli getblock $LASTHASH | jq '.size')/1024 ))kb"
    TXCOUNT=$(bitcoin-cli getblock $LASTHASH | jq '.tx' | wc -l)
    COINBASE=$(gettxfee $(bitcoin-cli getblock $LASTHASH | jq -r '.tx | .[]' | head -n1) | jq '.value' )
    TIME=$(bitcoin-cli getblock $LASTHASH | jq '.time')
    TIME=$(date --date="@$TIME" $DATEFMT -u)
    echo "$HEIGHT%$SIZE%$TXCOUNT%$COINBASE%$VERSION%$TIME" >> $TABLE
    LASTHASH=$(bitcoin-cli getblock $LASTHASH | jq -r '.previousblockhash')
done

# join results and present as a table
# % is column separator
(\
    echo "height%size%#_tx%coinbase%version%time%date"; \
    echo "------%----%----%--------%-------%----%----";\
    cat $TABLE \
) | column -t -s'%' > $OUTFILE


if [ -z $HTML ]
then
    cat $OUTFILE
else
    cat $OUTFILE | awk 'BEGIN{print "<table>"} {print "<tr>";for(i=1;i<=NF;i++)print "<td>" $i"</td>";print "</tr>"} END{print "</table>"}'
fi

rm $TABLE
rm $OUTFILE
