#!/usr/bin/env bash

# (c) /u/_supert_ 2016
# MIT licence

# show info about connected peers

source script_functions

# test for options
HTML=
NOHEADER=
while getopts hwr opt
do
    case "$opt" in
    (h) echo "usage: $0 [-w] [-r]";;
    (w) HTML=1;;
    (r) NOHEADER=1;;
    esac
done

shift $((OPTIND - 1))

RANDFILE=/tmp/peerinfo-$RANDOM.tmp

ADDRESS=/tmp/peerinfo-address-$RANDOM.tmp
LOCATION=/tmp/peerinfo-location-$RANDOM.tmp
HOSTNAME=/tmp/peerinfo-host-$RANDOM.tmp
CLIENT=/tmp/peerinfo-client-$RANDOM.tmp
SUBVER=/tmp/peerinfo-subver-$RANDOM.tmp
STARTINGHEIGHT=/tmp/peerinfo-startingheight-$RANDOM.tmp
SYNCED_BLOCKS=/tmp/peerinfo-synced-$RANDOM.tmp
TABLE=/tmp/peerinfo-table-$RANDOM.tmp
OUTFILE=/tmp/peerinfo-out-$RANDOM.tmp

bitcoin-cli getpeerinfo > $RANDFILE

get_field 'subver' "$RANDFILE" | sed -e 's+^.*:++' -e 's:/::' | cut -c 1-20 > $SUBVER
get_field 'subver' "$RANDFILE" | sed -e 's+:.*$++' -e 's+/++' | cut -c 1-20 > $CLIENT
get_field 'synced_blocks' "$RANDFILE" > $SYNCED_BLOCKS
get_field 'startingheight' "$RANDFILE" > $STARTINGHEIGHT
get_field 'addr' "$RANDFILE" | sed 's/:.*$//' > $ADDRESS
get_location $ADDRESS > $LOCATION
get_host $ADDRESS > $HOSTNAME

# join results and present as a table
(\
    if [ -z $NOHEADER ]
    then
        echo "# client ver synced since location host";
        echo "- ------ --- ------ ----- -------- ----";
    fi; \
    multi_join $CLIENT $SUBVER $SYNCED_BLOCKS $STARTINGHEIGHT $LOCATION $HOSTNAME ; \
) > $TABLE
column -t $TABLE | sed -e 's/~/ /g' > $OUTFILE


if [ -z $HTML ]
then
    cat $OUTFILE | cut -c 1-$(tput cols)
    echo
    echo "local block count: " $(bitcoin-cli getblockcount)
else
    cat $TABLE | awk 'BEGIN{print "<table>"; FS = " " } {print "<tr>";for(i=1;i<=NF;i++)print "<td>" $i"</td>";print "</tr>"} END{print "</table>"}'
    echo
    echo "<table>"
    echo "<td>local block count</td><td>" $(bitcoin-cli getblockcount) "</td>"
    echo "</table>"
fi

rm $RANDFILE $ADDRESS $HOSTNAME $LOCATION $CLIENT $SUBVER $STARTINGHEIGHT $SYNCED_BLOCKS $TABLE $OUTFILE

